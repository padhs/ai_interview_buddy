x-logging:
  &default-logging
  logging:
    driver: json-file
    options:
      max-size: 100M

services:
# ----------------------
# frontend Services
# ----------------------

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.front
    container_name: ai_interview_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev
    depends_on:
      - db
    networks:
      - ai_interview_network
    restart: unless-stopped
  
  # ----------------------
  # backend Services
  # ----------------------

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.server
    container_name: ai_interview_backend
    ports:
      - "8080:8080"
    environment:
      - GO_ENV=development
    depends_on:
      - db
    networks:
      - ai_interview_network
    restart: unless-stopped
  
  # ----------------------
  # db Services
  # ----------------------

  db:
    image: postgres:16
    container_name: ai_interview_db
    environment: # env variables from .env file
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./db/data:/var/lib/postgresql/data
    networks:
      - ai_interview_network
    restart: unless-stopped
  
  # pgadmin:
  #   image: dpage/pgadmin4:8
  #   container_name: ai_interview_pgadmin
  #   restart: unless-stopped
  #   environment: # env variables from .env file
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL} 
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     - db
  #   volumes:
  #     - ./pgadmin/data:/var/lib/pgadmin
  #   networks:
  #     - ai_interview_network
    


networks:
  ai_interview_network: {}
  
volumes:
  data:
